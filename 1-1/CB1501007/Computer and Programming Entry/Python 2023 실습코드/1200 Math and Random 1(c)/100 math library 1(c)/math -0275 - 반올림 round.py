#-------------------------------------------------------------------------------
# Purpose:     2019 Power Python
# Author:      Cho
#-------------------------------------------------------------------------------
"""
0.5 반올림은 1이어야 하는데 0이 나옵니다. 왜 그럴까요?
만약에 0.5의 반올림이 0이면 '파이썬 반올림은 X.5일때 내림인가?'
싶어서 1.5도 그럼 1이겠네 싶지만, 1.5를 반환하면 2가 나오게 됩니다.

파이썬의 반올림은 반올림 하려는 수가 올림, 내림했을 때 동일하게 차이가 나는
경우에는 짝수 값으로 반올림 합니다. 위에서 결과 값으로 확인했듯이
0.5 는 0에도 0.5가 차이나고 1에도 0.5가 차이가 나는 상황입니다.
이때 파이썬의 round 함수는 똑같이 가깝다면 짝수를 반환하게
설계되어있기 때문에 0 을 반환하는 것 입니다.

짝수라고... 짝수....

2.5 라는 숫자는 2에도 3에도 똑같이 0.5만큼 차이가 나기 때문에
짝수값인 2라는 수를 반올림의 적절한 값으로 판단하여 반환합니다.
다시 한번 더 말씀 드리면
3.5 라는 숫자는 3에도 4에도 똑같이 0.5 만큼 차이 나기 때문에
짝수 값인 4라는 수를 반올림의 적절한 값으로 판단하여 반환합니다.
"""


# round 함수 예제 1 : 예상값이 왜 다르게 나오지?
print('round(0.5) : {0}'.format(round(0.5)))
print('round(1.5) : {0}'.format(round(1.5)))
print('round(2.5) : {0}'.format(round(2.5)))
print('round(3.5) : {0}'.format(round(3.5)))
print('round(4.5) : {0}'.format(round(4.5)))
print('round(5.5) : {0}'.format(round(5.5)))
print('round(6.5) : {0}'.format(round(6.5)))

# round 함수 예제 2
print('round(-6.5) : {0}'.format(round(-6.5)))
print('round(-5.5) : {0}'.format(round(-5.5)))
print('round(-4.5) : {0}'.format(round(-4.5)))
print('round(-3.5) : {0}'.format(round(-3.5)))
print('round(-2.5) : {0}'.format(round(-2.5)))
print('round(-1.5) : {0}'.format(round(-1.5)))
print('round(-0.5) : {0}'.format(round(-0.5)))
